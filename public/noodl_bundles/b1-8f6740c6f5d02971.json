[{"name":"/Info Layer/image","nodes":[{"id":"ea47c065-d0aa-e2da-a724-093e29114369","type":"Timer","parameters":{"duration":1000},"ports":[],"children":[]},{"id":"df627980-9a0e-c09b-4320-4f7b6381d970","type":"Component Inputs","parameters":{},"ports":[],"children":[]},{"id":"08f9c9c4-4398-52b4-a9ac-5dd5730b89b5","type":"Group","parameters":{"position":"absolute","sizeMode":"explicit","width":{"value":100,"unit":"%","isFixed":true},"height":{"value":100,"unit":"%","isFixed":true},"alignY":"center","alignX":"center"},"ports":[],"children":[{"id":"f57b9370-2370-0614-a0c4-b6a193d66739","type":"Group","parameters":{"width":{"value":100,"unit":"px","isFixed":true},"height":{"value":100,"unit":"px","isFixed":true},"position":"relative","clip":true,"borderRadius":{"value":20,"unit":"px"},"backgroundColor":"Grey - 200","boxShadowEnabled":false,"boxShadowBlurRadius":{"value":10,"unit":"px"},"boxShadowSpreadRadius":{"value":0,"unit":"px"},"boxShadowColor":"Grey - 300"},"ports":[],"children":[{"id":"7d9ef611-9921-a494-5ead-b1a0025d75f1","type":"Group","parameters":{"backgroundColor":"White","borderRadius":{"value":20,"unit":"px"},"clip":true,"width":{"value":100,"unit":"%","isFixed":true},"height":{"value":100,"unit":"%","isFixed":true}},"ports":[],"children":[{"id":"a8bb52f3-9af0-7128-6112-ae396f304052","type":"Group","parameters":{"clip":true,"sizeMode":"explicit","cssClassName":"canvasContainer","position":"sticky","opacity":1,"mixBlendMode":"multiply","borderRadius":{"value":20,"unit":"px"}},"ports":[],"children":[]}]}]},{"id":"e628c436-49b3-ef86-f4d9-d728131e3f94","type":"Group","parameters":{"mounted":true,"visible":true,"position":"relative","height":{"value":1,"unit":"px"},"alignY":"bottom"},"ports":[],"children":[]}]},{"id":"6077b983-6a53-6ce1-ccdb-6780783bbd91","type":"Event Receiver","parameters":{"channelName":"pointerUp"},"ports":[],"children":[]},{"id":"2d898560-14ff-e981-2790-17a2265ee352","type":"Switch","parameters":{"onFromStart":false},"ports":[],"children":[]},{"id":"03fadbea-9609-cf7e-6d0c-59193b05ac82","type":"JavaScriptFunction","parameters":{"functionScript":"// Initialize the canvas when the signal is sent\nif (Inputs.InitCanvasSignal) {\n  //let container = document.querySelector('.canvasContainer')\n  let p5Image;\n  let fetchInProgress = false;\n  let imgSrcCheck;\n  let startTime;\n  let duration = 1800;\n  let resolutions = [2, 4, 8, 16, 32, 64, 80, 100, 120];\n  let currentIndex = 0;\n\n  let canvas = document.createElement(\"div\");\n  document.querySelector('.canvasContainer').appendChild(canvas);\n  \n  sketch = function (p) {\n    p.setup = function () {\n      p.createCanvas(Inputs.width, Inputs.height)\n      startTime = p.millis();\n    }\n\n    p.draw = function () {\n      p.background(255)\n\n      if (p5Image) {\n        //p.image(p5Image, 0, 0, Inputs.width*2, Inputs.height*2)\n        \n\n        let elapsedTime = p.millis() - startTime;\n\n        if (elapsedTime < duration) {\n          let progress = elapsedTime / duration;\n          let index = Math.floor(progress * resolutions.length);\n          currentIndex = index;\n        } else {\n          currentIndex = -1;\n        }\n        if (currentIndex >= 0 && currentIndex < resolutions.length) {\n          p.pixelateImage(p5Image, resolutions[currentIndex]);\n        } else {\n          p.image(p5Image, 0, 0);\n        }\n      }\n      \n      if(Inputs.pointerUp){\n        fetchInProgress = true;\n        p5Image = false;\n      }\n\n      if (fetchInProgress) {\n        // true while on pointer up\n        if(imgSrcCheck == Inputs.imgSrc){\n          // already fetched return; \n          return;\n        }else{\n          // store src and continue\n          imgSrcCheck = Inputs.imgSrc\n        }\n        var imgSrc = Inputs.imgSrc\n        console.log(imgSrc)\n        \n        // fetch png img from src\n        fetch(imgSrc)\n          .then((response) => response.blob())\n          .then((blob) => {\n            let img = new Image()\n            img.src = URL.createObjectURL(blob)\n            img.onload = () => {\n              p5Image = p.createImage(img.width, img.height)\n              p5Image.drawingContext.drawImage(img, 0, 0)\n              p5Image = p.cropRandomCorner(p5Image, p5Image.width/2, p5Image.height/2);\n              fetchInProgress = false;\n              startTime = p.millis();\n            }\n          })\n          .catch((error) => {\n            console.error('Error fetching image:', error)\n          })\n        \n        fetchInProgress = false;\n      }\n      \n    }\n    p.pixelateImage = function (img, resolution) {\n      // Calculate the size of each square based on the input resolution\n      let squareWidth = img.width / resolution;\n      let squareHeight = img.height / resolution;\n\n      // Iterate through the image and sample the color at each step based on the input resolution\n      for (let y = 0; y < img.height; y += squareHeight) {\n        for (let x = 0; x < img.width; x += squareWidth) {\n          let centerX = x + squareWidth / 2;\n          let centerY = y + squareHeight / 2;\n\n          // Get the color at the center of the square\n          let color = img.get(centerX, centerY);\n          // Set the fill color to the sampled color\n          p.noStroke();\n          p.fill(color);\n          //p.ellipse(x, y, squareWidth+1, squareHeight+1);\n          p.rect(x, y, squareWidth+1, squareHeight+1);\n        }\n      }\n    }\n    \n    p.cropRandomCorner = function (img, cropWidth, cropHeight) {\n      // Ensure the crop dimensions are smaller than the original image dimensions\n      if (cropWidth > img.width || cropHeight > img.height) {\n        console.error(\"Crop dimensions are larger than the original image dimensions.\");\n        return img;\n      }\n\n      // Randomly select one of the four corners\n      let corner = Math.floor(p.random(4));\n\n      let x, y;\n\n      switch (corner) {\n        case 0: // Top-left corner\n          x = 0;\n          y = 0;\n          break;\n        case 1: // Top-right corner\n          x = img.width - cropWidth;\n          y = 0;\n          break;\n        case 2: // Bottom-left corner\n          x = 0;\n          y = img.height - cropHeight;\n          break;\n        case 3: // Bottom-right corner\n          x = img.width - cropWidth;\n          y = img.height - cropHeight;\n          break;\n      }\n\n      // Get the cropped section of the image\n      let croppedImage = img.get(x, y, cropWidth, cropHeight);\n\n      croppedImage.resize(Inputs.width, Inputs.height);\n      return croppedImage;\n    }\n\n    p.windowResized = function () {\n      p.resizeCanvas(Inputs.width, Inputs.height)\n    }\n  }\n\n  p = new p5(sketch, canvas)\n}\n\n"},"ports":[{"name":"in-InitCanvasSignal","displayName":"InitCanvasSignal","plug":"input","type":"*","group":"Inputs","index":4},{"name":"in-width","displayName":"width","plug":"input","type":"*","group":"Inputs","index":5},{"name":"in-height","displayName":"height","plug":"input","type":"*","group":"Inputs","index":6},{"name":"in-pointerUp","displayName":"pointerUp","plug":"input","type":"*","group":"Inputs","index":7},{"name":"in-imgSrc","displayName":"imgSrc","plug":"input","type":"*","group":"Inputs","index":8}],"children":[]},{"id":"456d54e7-3056-eba3-29e1-6ca172696652","type":"Timer","parameters":{"duration":1},"ports":[],"children":[]},{"id":"1efaa6de-c218-373c-a93d-3e1563f6e596","type":"Event Receiver","parameters":{"channelName":"mapMoving"},"ports":[],"children":[]}],"connections":[{"sourceId":"a8bb52f3-9af0-7128-6112-ae396f304052","sourcePort":"didMount","targetId":"ea47c065-d0aa-e2da-a724-093e29114369","targetPort":"start"},{"sourceId":"6077b983-6a53-6ce1-ccdb-6780783bbd91","sourcePort":"eventReceived","targetId":"2d898560-14ff-e981-2790-17a2265ee352","targetPort":"on"},{"sourceId":"e628c436-49b3-ef86-f4d9-d728131e3f94","sourcePort":"boundingWidth","targetId":"f57b9370-2370-0614-a0c4-b6a193d66739","targetPort":"width"},{"sourceId":"e628c436-49b3-ef86-f4d9-d728131e3f94","sourcePort":"boundingWidth","targetId":"f57b9370-2370-0614-a0c4-b6a193d66739","targetPort":"height"},{"sourceId":"ea47c065-d0aa-e2da-a724-093e29114369","sourcePort":"timerFinished","targetId":"03fadbea-9609-cf7e-6d0c-59193b05ac82","targetPort":"in-InitCanvasSignal"},{"sourceId":"f57b9370-2370-0614-a0c4-b6a193d66739","sourcePort":"boundingWidth","targetId":"03fadbea-9609-cf7e-6d0c-59193b05ac82","targetPort":"in-width"},{"sourceId":"f57b9370-2370-0614-a0c4-b6a193d66739","sourcePort":"boundingHeight","targetId":"03fadbea-9609-cf7e-6d0c-59193b05ac82","targetPort":"in-height"},{"sourceId":"2d898560-14ff-e981-2790-17a2265ee352","sourcePort":"switchedToOn","targetId":"456d54e7-3056-eba3-29e1-6ca172696652","targetPort":"start"},{"sourceId":"2d898560-14ff-e981-2790-17a2265ee352","sourcePort":"state","targetId":"03fadbea-9609-cf7e-6d0c-59193b05ac82","targetPort":"in-pointerUp"},{"sourceId":"456d54e7-3056-eba3-29e1-6ca172696652","sourcePort":"timerFinished","targetId":"2d898560-14ff-e981-2790-17a2265ee352","targetPort":"off"},{"sourceId":"df627980-9a0e-c09b-4320-4f7b6381d970","sourcePort":"img","targetId":"03fadbea-9609-cf7e-6d0c-59193b05ac82","targetPort":"in-imgSrc"},{"sourceId":"1efaa6de-c218-373c-a93d-3e1563f6e596","sourcePort":"eventReceived","targetId":"2d898560-14ff-e981-2790-17a2265ee352","targetPort":"off"},{"sourceId":"ea47c065-d0aa-e2da-a724-093e29114369","sourcePort":"timerFinished","targetId":"2d898560-14ff-e981-2790-17a2265ee352","targetPort":"off"}],"ports":[{"name":"img","type":"*","group":"Inputs","plug":"input","index":1}],"roots":["08f9c9c4-4398-52b4-a9ac-5dd5730b89b5"]},{"name":"/Info Layer/info","nodes":[{"id":"43bfe4c1-4434-cb78-2f0b-528161ca35eb","type":"Group","parameters":{"backgroundColor":"#1F1F1FAA"},"ports":[],"children":[{"id":"a0ddf6da-de16-92a6-0c4e-c6976081e936","type":"Group","parameters":{},"ports":[],"children":[]},{"id":"f28e4fd0-6e7b-09cd-f6a5-d1e6b04e6e41","type":"Group","parameters":{"alignY":"top","sizeMode":"explicit","position":"absolute","marginTop":{"value":20,"unit":"px"},"marginLeft":{"value":20,"unit":"px"},"marginBottom":{"value":20,"unit":"px"},"marginRight":{"value":20,"unit":"px"}},"ports":[],"children":[{"id":"e4d1970b-53fb-2ea9-a9d9-2c9ac5ece909","type":"Group","parameters":{"backgroundColor":"White","borderRadius":{"value":20,"unit":"px"},"clip":true,"width":{"value":100,"unit":"%"},"height":{"value":100,"unit":"%"},"alignY":"center","alignX":"center","position":"absolute","paddingTop":{"value":12,"unit":"px"},"paddingRight":{"value":20,"unit":"px"},"paddingBottom":{"value":20,"unit":"px"},"paddingLeft":{"value":20,"unit":"px"},"maxWidth":{"value":600,"unit":"px"},"marginTop":{"value":0,"unit":"px"},"marginLeft":{"value":0,"unit":"px"},"marginBottom":{"value":0,"unit":"px"},"marginRight":{"value":0,"unit":"px"},"scrollEnabled":true,"sizeMode":"contentHeight"},"ports":[],"children":[{"id":"0b622562-e289-8af2-08c2-9e4225ca8848","type":"Text","parameters":{"textAlignX":"left","fontFamily":"fonts/HelveticaNowText-Regular.ttf","text":"Plotting Plates","fontSize":{"value":38,"unit":"px"}},"ports":[],"children":[]},{"id":"462f261c-3222-d844-a10f-278347a878e6","type":"Text","parameters":{"textAlignX":"left","fontFamily":"fonts/HelveticaNowText-Regular.ttf","text":"by oio","marginTop":{"value":10,"unit":"px"},"fontSize":{"value":18,"unit":"px"}},"ports":[],"children":[]},{"id":"5ab48ca4-701d-81d4-790d-fd67a99c18e1","type":"Text","parameters":{"textAlignX":"left","fontFamily":"fonts/HelveticaNowText-Regular.ttf","marginTop":{"value":30,"unit":"px"},"text":"In an effort to envision a future where humans and other intelligences work together to solve our planet’s biggest challenges, Plotting Plates is a first simple step towards a more sustainable design process and manufacturing. An experiment with an artificial intelligence trained to identify abundant materials in certain regions, then used to generate truly local products, all different. ","fontSize":{"value":18,"unit":"px"}},"ports":[],"children":[]},{"id":"d216e4f7-87f2-07fa-fc64-69c2f68ebb4e","type":"Image","parameters":{"src":"heros.png","sizeMode":"contentHeight","marginTop":{"value":25,"unit":"px"},"marginBottom":{"value":25,"unit":"px"}},"ports":[],"children":[]},{"id":"f26e0b2f-20a5-7318-d282-ec1a079c899b","type":"Text","parameters":{"textAlignX":"left","fontFamily":"fonts/HelveticaNowText-Regular.ttf","text":"The generative algorithm simulates the process of “emergence” where natural products such as fruits, flowers and even animals, emerge from a series of local variables. By reducing transportation and bringing manufacturing closer to the consumer, Plotting Plates aims to be a more sustainable and ethical process.","fontSize":{"value":18,"unit":"px"}},"ports":[],"children":[]},{"id":"55da79fa-f346-5ad3-fe16-c2d712d9d548","type":"net.noodl.controls.button","parameters":{"position":"absolute","zIndex":0,"alignX":"right","useIcon":true,"iconIconSource":{"class":"material-icons","code":"close"},"iconColor":"Primary Light","backgroundColor":"Grey - 900","useLabel":false,"paddingRight":{"value":0,"unit":"px"},"paddingLeft":{"value":0,"unit":"px"},"sizeMode":"explicit","width":{"value":40,"unit":"px"},"iconSize":{"value":30,"unit":"px"},"iconSpacing":{"value":1,"unit":"px"},"borderRadius":{"value":20,"unit":"px"},"minWidth":{"value":0,"unit":"px"},"marginTop":{"value":20,"unit":"px"},"marginRight":{"value":20,"unit":"px"}},"ports":[],"children":[]}]}]}]},{"id":"25afd983-0dc2-c555-712c-0c6c1195ade1","type":"NavigationClosePopup","parameters":{},"ports":[],"children":[]}],"connections":[{"sourceId":"55da79fa-f346-5ad3-fe16-c2d712d9d548","sourcePort":"onClick","targetId":"25afd983-0dc2-c555-712c-0c6c1195ade1","targetPort":"close"},{"sourceId":"a0ddf6da-de16-92a6-0c4e-c6976081e936","sourcePort":"onClick","targetId":"25afd983-0dc2-c555-712c-0c6c1195ade1","targetPort":"close"}],"ports":[],"roots":["43bfe4c1-4434-cb78-2f0b-528161ca35eb"]},{"name":"/Map Layer/canvas","nodes":[{"id":"72fa8d9f-9df7-4edc-b8fd-7d429a613b65","type":"Group","parameters":{"backgroundColor":"transparent","width":{"value":100,"unit":"%","isFixed":true},"height":{"value":100,"unit":"%","isFixed":true},"blockTouch":true,"styleCss":"/* background-color: red; */\npointer-events: none;\noverflow: hidden;\n","clip":true,"visible":true,"position":"absolute","pointerEventsMode":"explicit","pointerEventsEnabled":false,"alignY":"center","alignX":"center"},"ports":[],"children":[{"id":"63a8e326-4b50-d785-f3cf-99ceb313a2cd","type":"Group","parameters":{"position":"absolute","clip":true,"backgroundColor":"#00000000","width":{"value":100,"unit":"%","isFixed":true},"height":{"value":100,"unit":"%","isFixed":true},"blockTouch":true,"styleCss":"/* background-color: red; */\noverflow: hidden;","visible":true,"cssClassName":"canvas","zIndex":10,"sizeMode":"explicit"},"ports":[],"children":[]}]},{"id":"9759b90b-c603-9379-f10e-cbf52dba2fde","type":"Javascript2","parameters":{"code":"let counter = 0;\nlet resolution = 10;\nvar mapImage; \nvar reset = false;\nvar showMap = true;\nlet revealedPixels = 0;\nlet maxRevealedPixels = 1000;\n\n// initate the p5js canvas\nNode.Signals.InitCanvas = function(){\n    let canvas = document.createElement(\"div\");\n    Node.Inputs.group.getDOMElement().appendChild(canvas);\n    var array = Node.Inputs.itemLocations;\n\n    sketch = function(p) {\n        p.preload = function() {\n            var inputMapData = Node.Inputs.MapboxData;\n            mapImage = p.loadImage(inputMapData);\n        };\n\n        p.setup = function(){\n            p.createCanvas(Node.Inputs.width, Node.Inputs.height);   \n            p.drawingContext.canvas.willReadFrequently = true; \n        }\n        \n        p.draw = function() {\n            if (showMap) {\n                //p.image(mapImage, 0, 0, Node.Inputs.width, Node.Inputs.height);\n                var img = mapImage;\n                img.resize(Node.Inputs.width, Node.Inputs.height);\n\n                if (revealedPixels < maxRevealedPixels) {   \n                        let gridWidth = Math.ceil(img.width / resolution);\n                        let gridHeight = Math.ceil(img.height / resolution);\n\n                        let xIndex = Math.floor(p.random(gridWidth));\n                        let yIndex = Math.floor(p.random(gridHeight));\n\n                        let xPos = xIndex * resolution;\n                        let yPos = yIndex * resolution;\n\n                        let colorAtPixel = img.get(xPos, yPos);\n                        if(p.brightness(colorAtPixel) < 80){ // filter out white\n                            p.fill(colorAtPixel);\n                            p.noStroke();\n                            p.rect(xPos, yPos, resolution, resolution);\n                        }\n                        revealedPixels++;\n                }\n            }else{\n                p.clear();\n            }            \n        }\n\n    };\n    p = new p5(sketch, canvas);\n    \n}\n\nNode.Signals.reLoad = function(){\n    showMap = true;\n    var inputMapData = Node.Inputs.MapboxData;\n    mapImage = p.loadImage(inputMapData);\n}\n\nNode.Signals.mapMove = function(){\n    showMap = false;\n}","useExternalFile":"no","scriptInputs":[],"intype-width":"number","intype-height":"number","intype-gropu":"object","intype-item_x":"number","intype-item_y":"number","intype-dataArray":"array","intype-itemLocations":"array","scriptOutputs":[],"outtype-markerLocations":"array","intype-markerLocations":"array"},"ports":[{"name":"InitCanvas","plug":"input","type":{"name":"signal"},"group":"Inputs","index":5},{"name":"reLoad","plug":"input","type":{"name":"signal"},"group":"Inputs","index":6},{"name":"mapMove","plug":"input","type":{"name":"signal"},"group":"Inputs","index":7},{"name":"group","displayName":"group","plug":"input","type":"*","group":"Inputs","index":8},{"name":"itemLocations","displayName":"itemLocations","plug":"input","type":"*","group":"Inputs","index":9},{"name":"MapboxData","displayName":"MapboxData","plug":"input","type":"*","group":"Inputs","index":10},{"name":"width","displayName":"width","plug":"input","type":"*","group":"Inputs","index":11},{"name":"height","displayName":"height","plug":"input","type":"*","group":"Inputs","index":12}],"children":[]},{"id":"7bb034f6-0728-f796-fb2a-cd8214e7579a","type":"Event Receiver","parameters":{"channelName":"update"},"ports":[],"children":[]},{"id":"ce00f9b6-fbc2-7d1d-e6a2-be5ee1040392","type":"Timer","parameters":{"duration":2000},"ports":[],"children":[]},{"id":"f7320c63-958f-0798-1aa2-0ae2054aaf0b","type":"Component Inputs","parameters":{},"ports":[],"children":[]},{"id":"9e9db946-dbaa-b9b3-aeb4-30ec9e6128fa","type":"Event Receiver","parameters":{"channelName":"mapMoving"},"ports":[],"children":[]}],"connections":[{"sourceId":"63a8e326-4b50-d785-f3cf-99ceb313a2cd","sourcePort":"boundingWidth","targetId":"9759b90b-c603-9379-f10e-cbf52dba2fde","targetPort":"width"},{"sourceId":"63a8e326-4b50-d785-f3cf-99ceb313a2cd","sourcePort":"boundingHeight","targetId":"9759b90b-c603-9379-f10e-cbf52dba2fde","targetPort":"height"},{"sourceId":"63a8e326-4b50-d785-f3cf-99ceb313a2cd","sourcePort":"this","targetId":"9759b90b-c603-9379-f10e-cbf52dba2fde","targetPort":"group"},{"sourceId":"63a8e326-4b50-d785-f3cf-99ceb313a2cd","sourcePort":"didMount","targetId":"ce00f9b6-fbc2-7d1d-e6a2-be5ee1040392","targetPort":"start"},{"sourceId":"ce00f9b6-fbc2-7d1d-e6a2-be5ee1040392","sourcePort":"timerFinished","targetId":"9759b90b-c603-9379-f10e-cbf52dba2fde","targetPort":"InitCanvas"},{"sourceId":"f7320c63-958f-0798-1aa2-0ae2054aaf0b","sourcePort":"mapbox","targetId":"9759b90b-c603-9379-f10e-cbf52dba2fde","targetPort":"MapboxData"},{"sourceId":"7bb034f6-0728-f796-fb2a-cd8214e7579a","sourcePort":"eventReceived","targetId":"9759b90b-c603-9379-f10e-cbf52dba2fde","targetPort":"reLoad"},{"sourceId":"9e9db946-dbaa-b9b3-aeb4-30ec9e6128fa","sourcePort":"eventReceived","targetId":"9759b90b-c603-9379-f10e-cbf52dba2fde","targetPort":"mapMove"}],"ports":[{"name":"mapbox","type":"*","group":"Inputs","plug":"input","index":1}],"roots":["72fa8d9f-9df7-4edc-b8fd-7d429a613b65"]}]